{"version":3,"sources":["../src/tweet-truncator.js"],"names":["debug","require","joinText","array","separator","isNotEmpty","string","length","filter","join","defaultOptions","defaultPrefix","template","truncatedOrder","elisionMark","TweetTruncator","options","twitterTextOptions","str","twttr","getTweetLength","contents","desc","quote","title","url","tags","prefix","extractTemplate","usage","fixedTemplate","replace","match","name","trim","split","map","content","overLength","over","copiedContents","bind","truncateContent","truncators","arr","slice","reverse","tag","i","truncatorName","truncate","joinContents","strArr","urls","extractUrlsWithIndices","twLen","indices","start","end","len"],"mappings":"AAAA;AACA;;;;;;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,gBAAjB,CAAd;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,SAAR,EAAsB;AACnC,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAAY;AAC3B,WAAOA,MAAM,CAACC,MAAP,GAAgB,CAAvB;AACH,GAFD;;AAGA,SAAOJ,KAAK,CAACK,MAAN,CAAaH,UAAb,EAAyBI,IAAzB,CAA8BL,SAA9B,CAAP;AACH,CALD;;AAMA,IAAMM,cAAc,GAAG;AACnBC,EAAAA,aAAa,EAAE,EADI;AAEnBC,EAAAA,QAAQ,mCAFW;AAGnBC,EAAAA,cAAc,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,EAA2B,MAA3B,EAAmC,KAAnC,CAHG;AAInB;AACAC,EAAAA,WAAW,EAAE;AALM,CAAvB;;IAQqBC,c;AACjB,4BAA0B;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AACtB,SAAKJ,QAAL,GAAgBI,OAAO,CAACJ,QAAR,IAAoBF,cAAc,CAACE,QAAnD;AACA,SAAKD,aAAL,GAAqBK,OAAO,CAACL,aAAR,IAAyBD,cAAc,CAACC,aAA7D;AACA,SAAKE,cAAL,GAAsBG,OAAO,CAACH,cAAR,IAA0BH,cAAc,CAACG,cAA/D;AACA,SAAKC,WAAL,GAAmBE,OAAO,CAACF,WAAR,IAAuBJ,cAAc,CAACI,WAAzD;AACA,SAAKG,kBAAL,GAA0BD,OAAO,CAACC,kBAAR,IAA8B,EAAxD;AACH;;;;WAED,wBAAeC,GAAf,EAAoB;AAChB,aAAOC,KAAK,CAACC,cAAN,CAAqBF,GAArB,EAA0B,KAAKD,kBAA/B,CAAP;AACH;;;WAED,sBAAaI,QAAb,EAAuB;AACnB,UAAIT,QAAQ,GAAG,KAAKA,QAApB;AADmB,UAEbU,IAFa,GAEqBD,QAFrB,CAEbC,IAFa;AAAA,UAEPC,KAFO,GAEqBF,QAFrB,CAEPE,KAFO;AAAA,UAEAC,KAFA,GAEqBH,QAFrB,CAEAG,KAFA;AAAA,UAEOC,GAFP,GAEqBJ,QAFrB,CAEOI,GAFP;AAAA,UAEYC,IAFZ,GAEqBL,QAFrB,CAEYK,IAFZ;AAGnB,UAAIC,MAAM,GAAGL,IAAI,GAAG,EAAH,GAAQ,KAAKX,aAA9B;AAEA,aAAOC,QAAQ,GACT,KAAKgB,eAAL,CAAqBD,MAArB,EAA6Bf,QAA7B,EAAuCS,QAAvC,CADS,GAETnB,QAAQ,EAAEyB,MAAF,EAAUL,IAAV,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,GAA9B,4BAAsCC,IAAtC,IAA6C,GAA7C,CAFd;AAGH;;;WAED,yBAAgBC,MAAhB,EAAwBf,QAAxB,EAAkCS,QAAlC,EAA4C;AACxCA,MAAAA,QAAQ,CAACQ,KAAT,GAAiB,EAAjB;AAEA,UAAIC,aAAa,GAAGlB,QAAQ,CACvBmB,OADe,CACP,mCADO,EAC8B,UAACC,KAAD,EAAQC,IAAR,EAAiB;AAC3D,YAAIA,IAAI,KAAK,IAAb,EAAmB;AACf,iBAAO,IAAP;AACH;;AAEDZ,QAAAA,QAAQ,CAACQ,KAAT,CAAeI,IAAf,IAAuB,IAAvB;AAEA,eAAOZ,QAAQ,CAACY,IAAD,CAAR,CAAe1B,MAAf,GAAwByB,KAAxB,GAAgC,EAAvC;AACH,OATe,EAUfE,IAVe,GAWfH,OAXe,CAWP,WAXO,EAWM,EAXN,EAYfA,OAZe,CAYP,KAZO,EAYA,GAZA,CAApB;AAcA,aAAO7B,QAAQ,CACX,CAACyB,MAAD,4BAAYG,aAAa,CAACK,KAAd,CAAoB,GAApB,CAAZ,GAAsCC,GAAtC,CAA0C,UAACC,OAAD;AAAA,eACtCA,OAAO,CAACN,OAAR,CAAgB,gCAAhB,EAAkD,UAACC,KAAD,EAAQC,IAAR;AAAA,iBAC9CA,IAAI,KAAK,MAAT,GAAkBZ,QAAQ,CAACK,IAAT,CAAcjB,IAAd,CAAmB,GAAnB,CAAlB,GAA4CY,QAAQ,CAACY,IAAD,CADN;AAAA,SAAlD,CADsC;AAAA,OAA1C,CADW,EAMX,GANW,CAAf;AAQH;;;WAED,wBAAeZ,QAAf,EAAyC;AAAA,UAAhBiB,UAAgB,uEAAH,CAAG;AACrC,UAAIC,IAAI,GAAGD,UAAX;;AAEA,UAAIE,cAAc,qBAAQnB,QAAR,CAAlB;;AACA,UAAMP,WAAW,GAAG,KAAKA,WAAzB;AACA,UAAMM,cAAc,GAAG,KAAKA,cAAL,CAAoBqB,IAApB,CAAyB,IAAzB,CAAvB;AACA,UAAMC,eAAe,GAAG,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAxB;AACA,UAAIE,UAAU,GAAG;AACbjB,QAAAA,IAAI,EAAE,cAACvB,KAAD,EAAW;AACb,cAAIyC,GAAG,GAAGzC,KAAK,CAAC0C,KAAN,EAAV;AAEAL,UAAAA,cAAc,CAACd,IAAf,GAAsBkB,GAAG,CACpBE,OADiB,GAEjBtC,MAFiB,CAEV,UAACuC,GAAD,EAAS;AACb,gBAAIR,IAAI,IAAI,CAAZ,EAAe;AACX,qBAAO,IAAP;AACH;;AAEDA,YAAAA,IAAI,IAAIQ,GAAG,CAACxC,MAAZ;AACH,WARiB,EASjBuC,OATiB,EAAtB;AAUA9C,UAAAA,KAAK,iBAAU4C,GAAG,CAACrC,MAAd,iBAA2BiC,cAAc,CAACd,IAAf,CAAoBnB,MAA/C,EAAL;;AACA,cAAIiC,cAAc,CAACd,IAAf,CAAoBnB,MAApB,IAA8BgC,IAAI,IAAI,CAA1C,EAA6C;AACzC,mBAAO,IAAP;AACH;AACJ,SAlBY;AAmBbf,QAAAA,KAAK,EAAE,eAAClB,MAAD,EAAY;AACf,cAAIY,GAAG,GAAGwB,eAAe,CAACpC,MAAD,EAASiC,IAAI,GAAGzB,WAAW,CAACP,MAA5B,CAAzB;AACAP,UAAAA,KAAK,yBAAkBuC,IAAlB,eACnBjC,MADmB,mCAGnBY,GAAG,CAACX,MAAJ,GAAaW,GAAb,GAAmB,UAHA,EAAL;;AAIA,cAAIA,GAAJ,EAAS;AACLsB,YAAAA,cAAc,CAAChB,KAAf,GAAuBN,GAAG,GAAGJ,WAA7B;AACH,WAFD,MAEO;AACHyB,YAAAA,IAAI,IAAInB,cAAc,CAACd,MAAD,CAAd,GAAyB,CAAjC;AACAkC,YAAAA,cAAc,CAAChB,KAAf,GAAuBN,GAAvB;;AACA,gBAAIqB,IAAI,GAAG,CAAX,EAAc;AACV,qBAAO,KAAP;AACH;AACJ;;AAED,iBAAO,IAAP;AACH,SApCY;AAqCbhB,QAAAA,KAAK,EAAE,eAACjB,MAAD,EAAY;AACf,cAAIY,GAAG,GAAGwB,eAAe,CAACpC,MAAM,CAACuC,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAD,EAAsBN,IAAI,GAAGzB,WAAW,CAACP,MAAzC,CAAzB;AACAP,UAAAA,KAAK,yBAAkBuC,IAAlB,eACnBjC,MADmB,mCAGnBY,GAAG,CAACX,MAAJ,GAAaW,GAAb,GAAmB,UAHA,EAAL;;AAIA,cAAIA,GAAJ,EAAS;AACLsB,YAAAA,cAAc,CAACjB,KAAf,aAA0BL,GAA1B,SAAgCJ,WAAhC;AACH,WAFD,MAEO;AACHyB,YAAAA,IAAI,IAAInB,cAAc,CAACd,MAAD,CAAd,GAAyB,CAAjC;AACAkC,YAAAA,cAAc,CAACjB,KAAf,GAAuBL,GAAvB;;AAEA,gBAAIqB,IAAI,GAAG,CAAX,EAAc;AACV,qBAAO,KAAP;AACH;AACJ;;AAED,iBAAO,IAAP;AACH,SAvDY;AAwDbjB,QAAAA,IAAI,EAAE,cAAChB,MAAD,EAAY;AACd,cAAIY,GAAG,GAAGwB,eAAe,CAACpC,MAAD,EAASiC,IAAI,GAAGzB,WAAW,CAACP,MAA5B,CAAf,GAAqDO,WAA/D;AACA0B,UAAAA,cAAc,CAAClB,IAAf,GAAsBJ,GAAtB;AACAlB,UAAAA,KAAK,wBAAiBuC,IAAjB,eACnBjC,MADmB,mCAGnBY,GAAG,CAACX,MAAJ,GAAaW,GAAb,GAAmB,UAHA,EAAL;AAIA,iBAAO,IAAP;AACH,SAhEY;AAiEbO,QAAAA,GAAG,EAAE,aAACnB,MAAD,EAAY;AACb;AACA,iBAAO,IAAP;AACH;AApEY,OAAjB;;AAsEA,WAAK,IAAI0C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKnC,cAAL,CAAoBN,MAApB,GAA6B,CAAjD,EAAoDyC,CAAC,EAArD,EAAyD;AACrD,YAAIT,IAAI,IAAI,CAAZ,EAAe;AACX;AACH;;AACD,YAAMU,aAAa,GAAG,KAAKpC,cAAL,CAAoBmC,CAApB,CAAtB;;AACA,YAAIR,cAAc,CAACX,KAAf,IAAwB,CAACW,cAAc,CAACX,KAAf,CAAqBoB,aAArB,CAA7B,EAAkE;AAC9DT,UAAAA,cAAc,CAACS,aAAD,CAAd,GAAgCA,aAAa,KAAK,MAAlB,GAA2B,EAA3B,GAAgC,EAAhE;AACH;;AACD,YAAMZ,OAAO,GAAGG,cAAc,CAACS,aAAD,CAA9B;AACA,YAAMC,QAAQ,GAAGP,UAAU,CAACM,aAAD,CAA3B;;AACA,YAAIZ,OAAO,CAAC9B,MAAR,IAAkB2C,QAAQ,CAACb,OAAD,CAA9B,EAAyC;AACrC;AACH;AACJ;;AAED,aAAO,KAAKc,YAAL,CAAkBX,cAAlB,CAAP;AACH;;;WAED,yBAAgBH,OAAhB,EAAyBC,UAAzB,EAAqC;AACjC;AACA,UAAIc,MAAM,sBAAOf,OAAP,CAAV;;AACA,UAAIgB,IAAI,GAAGlC,KAAK,CAACmC,sBAAN,CAA6BjB,OAA7B,EAAsCS,OAAtC,EAAX;AACA,UAAIS,KAAK,GAAG,KAAKnC,cAAL,CAAoBiB,OAApB,CAAZ;AACA,UAAIE,IAAI,GAAGD,UAAX;;AAEA,UAAI,CAACe,IAAI,CAAC9C,MAAN,IAAgBgD,KAAK,IAAIhB,IAAI,GAAG,CAApC,EAAuC;AACnC,eAAOa,MAAM,CAACP,KAAP,CAAa,CAAb,EAAgB,EAAEN,IAAI,GAAG,CAAT,CAAhB,EAA6B9B,IAA7B,CAAkC,EAAlC,CAAP;AACH;;AAED,WAAK,IAAIuC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,IAAI,CAAC9C,MAAzB,EAAiCyC,CAAC,EAAlC,EAAsC;AAClC,YAAMQ,OAAO,GAAGH,IAAI,CAACL,CAAD,CAAJ,CAAQQ,OAAxB;AACA,YAAMC,KAAK,GAAGD,OAAO,CAAC,CAAD,CAArB;AACA,YAAME,GAAG,GAAGF,OAAO,CAAC,CAAD,CAAnB;AACA,YAAIG,GAAG,GAAGP,MAAM,CAAC7C,MAAjB;;AAEA,YAAIgC,IAAI,GAAGoB,GAAG,GAAGD,GAAjB,EAAsB;AAClB;AACH;;AACDN,QAAAA,MAAM,GAAGA,MAAM,CAACP,KAAP,CAAa,CAAb,EAAgBY,KAAK,IAAIE,GAAG,KAAKD,GAAR,GAAcA,GAAd,GAAoBC,GAAxB,CAArB,CAAT;AACApB,QAAAA,IAAI,IAAIgB,KAAK,GAAG,KAAKnC,cAAL,CAAoBgC,MAAM,CAAC3C,IAAP,CAAY,EAAZ,CAApB,CAAhB;;AACA,YAAI8B,IAAI,GAAG,CAAX,EAAc;AACV;AACH;;AAEDgB,QAAAA,KAAK,GAAG,KAAKnC,cAAL,CAAoBgC,MAAM,CAAC3C,IAAP,CAAY,EAAZ,CAApB,CAAR;AACH;;AAED,UAAI8B,IAAI,IAAI,CAAZ,EAAe;AACXa,QAAAA,MAAM,GAAGA,MAAM,CAACP,KAAP,CAAa,CAAb,EAAgB,EAAEN,IAAI,GAAG,CAAT,CAAhB,CAAT;AACH;;AAED,aAAOa,MAAM,CAAC3C,IAAP,CAAY,EAAZ,CAAP;AACH","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport * as twttr from \"twitter-text\";\n// DEBUG=TweetTruncator*\nconst debug = require(\"debug\")(\"TweetTruncator\");\nconst joinText = (array, separator) => {\n    const isNotEmpty = (string) => {\n        return string.length > 0;\n    };\n    return array.filter(isNotEmpty).join(separator);\n};\nconst defaultOptions = {\n    defaultPrefix: \"\",\n    template: `%desc% \"%title%\" %url% %tags%`,\n    truncatedOrder: [\"tags\", \"title\", \"quote\", \"desc\", \"url\"],\n    // text…\n    elisionMark: \"…\"\n};\n\nexport default class TweetTruncator {\n    constructor(options = {}) {\n        this.template = options.template || defaultOptions.template;\n        this.defaultPrefix = options.defaultPrefix || defaultOptions.defaultPrefix;\n        this.truncatedOrder = options.truncatedOrder || defaultOptions.truncatedOrder;\n        this.elisionMark = options.elisionMark || defaultOptions.elisionMark;\n        this.twitterTextOptions = options.twitterTextOptions || {};\n    }\n\n    getTweetLength(str) {\n        return twttr.getTweetLength(str, this.twitterTextOptions);\n    }\n\n    joinContents(contents) {\n        let template = this.template;\n        let { desc, quote, title, url, tags } = contents;\n        let prefix = desc ? \"\" : this.defaultPrefix;\n\n        return template\n            ? this.extractTemplate(prefix, template, contents)\n            : joinText([prefix, desc, quote, title, url, ...tags], \" \");\n    }\n\n    extractTemplate(prefix, template, contents) {\n        contents.usage = {};\n\n        let fixedTemplate = template\n            .replace(/%(desc|quote|title|url|tags|br)%/g, (match, name) => {\n                if (name === \"br\") {\n                    return \"\\n\";\n                }\n\n                contents.usage[name] = true;\n\n                return contents[name].length ? match : \"\";\n            })\n            .trim()\n            .replace(/^ +| +$/gm, \"\")\n            .replace(/ +/g, \" \");\n\n        return joinText(\n            [prefix, ...fixedTemplate.split(\" \")].map((content) =>\n                content.replace(/%(desc|quote|title|url|tags)%/g, (match, name) =>\n                    name === \"tags\" ? contents.tags.join(\" \") : contents[name]\n                )\n            ),\n            \" \"\n        );\n    }\n\n    truncateStatus(contents, overLength = 0) {\n        let over = overLength;\n\n        let copiedContents = { ...contents };\n        const elisionMark = this.elisionMark;\n        const getTweetLength = this.getTweetLength.bind(this);\n        const truncateContent = this.truncateContent.bind(this);\n        let truncators = {\n            tags: (array) => {\n                let arr = array.slice();\n\n                copiedContents.tags = arr\n                    .reverse()\n                    .filter((tag) => {\n                        if (over <= 0) {\n                            return true;\n                        }\n\n                        over -= tag.length;\n                    })\n                    .reverse();\n                debug(`tags: ${arr.length} -> ${copiedContents.tags.length}`);\n                if (copiedContents.tags.length || over <= 0) {\n                    return true;\n                }\n            },\n            title: (string) => {\n                let str = truncateContent(string, over + elisionMark.length);\n                debug(`[TITLE] over: ${over}\n${string}\n                ->\n${str.length ? str : \"[DELETE]\"}`);\n                if (str) {\n                    copiedContents.title = str + elisionMark;\n                } else {\n                    over -= getTweetLength(string) + 1;\n                    copiedContents.title = str;\n                    if (over > 0) {\n                        return false;\n                    }\n                }\n\n                return true;\n            },\n            quote: (string) => {\n                let str = truncateContent(string.slice(1, -1), over + elisionMark.length);\n                debug(`[Quote] over: ${over}\n${string}\n                ->\n${str.length ? str : \"[DELETE]\"}`);\n                if (str) {\n                    copiedContents.quote = `${str}${elisionMark}`;\n                } else {\n                    over -= getTweetLength(string) + 1;\n                    copiedContents.quote = str;\n\n                    if (over > 0) {\n                        return false;\n                    }\n                }\n\n                return true;\n            },\n            desc: (string) => {\n                var str = truncateContent(string, over + elisionMark.length) + elisionMark;\n                copiedContents.desc = str;\n                debug(`[DESC] over: ${over}\n${string}\n                ->\n${str.length ? str : \"[DELETE]\"}`);\n                return true;\n            },\n            url: (string) => {\n                // no change\n                return true;\n            }\n        };\n        for (var i = 0; i < this.truncatedOrder.length - 1; i++) {\n            if (over <= 0) {\n                break;\n            }\n            const truncatorName = this.truncatedOrder[i];\n            if (copiedContents.usage && !copiedContents.usage[truncatorName]) {\n                copiedContents[truncatorName] = truncatorName === \"tags\" ? [] : \"\";\n            }\n            const content = copiedContents[truncatorName];\n            const truncate = truncators[truncatorName];\n            if (content.length && truncate(content)) {\n                break;\n            }\n        }\n\n        return this.joinContents(copiedContents);\n    }\n\n    truncateContent(content, overLength) {\n        // for surrogate pair\n        let strArr = [...content];\n        let urls = twttr.extractUrlsWithIndices(content).reverse();\n        let twLen = this.getTweetLength(content);\n        let over = overLength;\n\n        if (!urls.length || twLen <= over + 1) {\n            return strArr.slice(0, -(over + 1)).join(\"\");\n        }\n\n        for (var i = 0; i < urls.length; i++) {\n            const indices = urls[i].indices;\n            const start = indices[0];\n            const end = indices[1];\n            let len = strArr.length;\n\n            if (over < len - end) {\n                break;\n            }\n            strArr = strArr.slice(0, start - (len === end ? end : len));\n            over -= twLen - this.getTweetLength(strArr.join(\"\"));\n            if (over < 0) {\n                break;\n            }\n\n            twLen = this.getTweetLength(strArr.join(\"\"));\n        }\n\n        if (over >= 0) {\n            strArr = strArr.slice(0, -(over + 1));\n        }\n\n        return strArr.join(\"\");\n    }\n}\n"],"file":"tweet-truncator.js"}