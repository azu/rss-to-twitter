{"version":3,"sources":["../src/index.js"],"names":["truncate","contents","options","maxLength","twitterTr","TweetTruncator","fixedContents","desc","quote","title","url","tags","map","tag","status","joinContents","over","getTweetLength","truncateStatus"],"mappings":"AAAA;AACA;;;;;;;;;;;;;AACA;;;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,QAAT,CAAkBC,QAAlB,EAA0C;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AAC7C,MAAMC,SAAS,GAAGD,OAAO,CAACC,SAAR,IAAqB,GAAvC,CAD6C,CACD;;AAC5C,MAAMC,SAAS,GAAG,IAAIC,0BAAJ,CAAmBH,OAAnB,CAAlB;;AACA,MAAMI,aAAa;AACfC,IAAAA,IAAI,EAAE,EADS;AAEfC,IAAAA,KAAK,EAAE,EAFQ;AAGfC,IAAAA,KAAK,EAAE,EAHQ;AAIfC,IAAAA,GAAG,EAAE,EAJU;AAKfC,IAAAA,IAAI,EAAE;AALS,KAMZV,QANY,CAAnB;;AAQAK,EAAAA,aAAa,CAACK,IAAd,GAAqBL,aAAa,CAACK,IAAd,CAAmBC,GAAnB,CAAuB,UAACC,GAAD;AAAA,sBAAaA,GAAb;AAAA,GAAvB,CAArB;AACA,MAAMC,MAAM,GAAGV,SAAS,CAACW,YAAV,CAAuBT,aAAvB,CAAf;AACA,MAAIU,IAAI,GAAGZ,SAAS,CAACa,cAAV,CAAyBH,MAAzB,IAAmCX,SAA9C;;AACA,MAAIa,IAAI,GAAG,CAAX,EAAc;AACV,WAAOZ,SAAS,CAACc,cAAV,CAAyBZ,aAAzB,EAAwCU,IAAxC,CAAP;AACH;;AACD,SAAOF,MAAP;AACH","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport TweetTruncator from \"./tweet-truncator\";\n// export class\nexport { TweetTruncator as TweetTruncator };\n\n/**\n * truncate contents object with maxLength.\n * @param {{\n *   desc?: string,\n *   quote?: string,\n *   title?: string,\n *   url?: string,\n *   tags?: string[]\n * }} contents\n * @param {object} options\n * @returns {string}\n */\nexport function truncate(contents, options = {}) {\n    const maxLength = options.maxLength || 280; // default: 280\n    const twitterTr = new TweetTruncator(options);\n    const fixedContents = {\n        desc: \"\",\n        quote: \"\",\n        title: \"\",\n        url: \"\",\n        tags: [],\n        ...contents\n    };\n    fixedContents.tags = fixedContents.tags.map((tag) => `#${tag}`);\n    const status = twitterTr.joinContents(fixedContents);\n    let over = twitterTr.getTweetLength(status) - maxLength;\n    if (over > 0) {\n        return twitterTr.truncateStatus(fixedContents, over);\n    }\n    return status;\n}\n"],"file":"index.js"}